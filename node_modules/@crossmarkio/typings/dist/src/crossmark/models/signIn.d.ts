import { BaseFullResponse, BaseRequest, BaseResponse, SignOpts } from './common/base';
import { SignInTransaction } from './common/tx';
import { Status } from './common/status';
import { latest } from '../../schema/latest';
import { Extension } from '../../extension/index';
export interface SignInRequest extends BaseRequest {
    command: Extension.COMMANDS.SIGN;
    data: {
        tx: SignInTransaction;
        hex?: string;
        opts?: SignOpts;
    };
}
interface SignInDataResponse {
    data: {
        address: string;
        publicKey: string;
        signature?: string;
        network: typeof latest.Types.BasicNetwork;
        user: typeof latest.Types.BasicUser;
        meta: Status;
    };
}
export type SignInResponse = BaseResponse & SignInDataResponse;
export interface SignInFullResponse extends BaseFullResponse {
    request: SignInRequest;
    response: SignInResponse;
}
export {};
