import { Protocols } from '../protocols';
import { NetworkIcons } from './common/icons';
import { NetworkLabels } from './common/labels';
declare class XevmNetwork {
    static protocol: Protocols;
    static Types: XevmNetwork.NodeTypes;
    static label: NetworkLabels;
    static icon: NetworkIcons;
    static asset: string;
    static active: boolean;
    static defaultReserves: {
        base: string;
        inc: string;
    };
}
declare namespace XevmNetwork {
    enum NetworkTypes {
        mainnet = "mainnet",
        testnet = "testnet",
        devnet = "devnet"
    }
    type NodeTypes = NetworkTypes.mainnet | NetworkTypes.testnet | NetworkTypes.devnet;
    enum Explorers {
        peersyst = "peersyst"
    }
    const colors: {
        mainnet: string;
        testnet: string;
        devnet: string;
    };
    const PeersysHost: {
        mainnet: string;
        testnet: string;
        devnet: string;
    };
    const Hosts: {
        peersyst: {
            mainnet: string;
            testnet: string;
            devnet: string;
        };
    };
    const ExplorerAddressPath: {
        peersyst: string;
    };
    const ExplorerTxPath: {
        peersyst: string;
    };
    const getExplorerHost: (explorer: XevmNetwork.Explorers, type: XevmNetwork.NetworkTypes) => string | undefined;
    const getExplorerPath: (explorer: XevmNetwork.Explorers, type: 'address' | 'tx') => string | undefined;
}
export { XevmNetwork };
