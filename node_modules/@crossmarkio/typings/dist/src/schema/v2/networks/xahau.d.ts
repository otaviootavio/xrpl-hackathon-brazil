import { Protocols } from '../protocols';
import { NetworkIcons } from './common/icons';
import { NetworkLabels } from './common/labels';
declare class XahauNetwork {
    static protocol: Protocols;
    static Types: XahauNetwork.NodeTypes;
    static label: NetworkLabels;
    static icon: NetworkIcons;
    static asset: string;
    static active: boolean;
    static defaultReserves: {
        base: string;
        inc: string;
    };
}
declare namespace XahauNetwork {
    enum NetworkTypes {
        mainnet = "mainnet",
        testnet = "testnet",
        devnet = "devnet"
    }
    type NodeTypes = NetworkTypes.mainnet | NetworkTypes.testnet | NetworkTypes.devnet;
    enum Explorers {
        bithomp = "bithomp",
        xrplf = "xrplf",
        xrplorg = "xrpl.org"
    }
    const colors: {
        mainnet: string;
        devnet: string;
        testnet: string;
    };
    const BithompHost: {
        mainnet: string;
        testnet: string;
        devnet: string;
    };
    const XrplfHost: {
        mainnet: string;
        testnet: string;
        devnet: string;
    };
    const XrplOrgHost: {
        mainnet: string;
        testnet: string;
        devnet: string;
    };
    const Hosts: {
        bithomp: {
            mainnet: string;
            testnet: string;
            devnet: string;
        };
        xrplf: {
            mainnet: string;
            testnet: string;
            devnet: string;
        };
        "xrpl.org": {
            mainnet: string;
            testnet: string;
            devnet: string;
        };
    };
    const ExplorerAddressPath: {
        bithomp: string;
        xrplf: string;
        "xrpl.org": string;
    };
    const ExplorerTxPath: {
        bithomp: string;
        xrplf: string;
        "xrpl.org": string;
    };
    const getExplorerHost: (explorer: XahauNetwork.Explorers, type: XahauNetwork.NetworkTypes) => string | undefined;
    const getExplorerPath: (explorer: XahauNetwork.Explorers, type: 'address' | 'tx') => string | undefined;
}
export { XahauNetwork };
