"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MountedUserSchema = void 0;
const node_1 = require("./node");
const defaults = __importStar(require("./defaults"));
const v1_1 = require("../../v1");
const security_1 = require("./security");
const v1 = v1_1.Types.Api.Types;
class MountedUserSchema {
    mounted;
    profile;
    node;
    nodes;
    security;
    general;
    preference;
    cards;
    apps;
    contacts;
    vault;
    log;
    static migration = (oldValue) => {
        let old = oldValue;
        let node = node_1.NodeSchema.migration(oldValue.network);
        let nodes = oldValue.networks.map((network) => node_1.NodeSchema.migration(network));
        delete old.network;
        delete old.networks;
        node = defaults.defaultNodes[0];
        nodes = defaults.defaultNodes;
        let security = security_1.SecuritySchema.migration(oldValue.security);
        return Object.assign({}, old, { node, nodes, security });
    };
}
exports.MountedUserSchema = MountedUserSchema;
//# sourceMappingURL=user.js.map