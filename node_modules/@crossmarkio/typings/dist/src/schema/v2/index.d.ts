import { AllNetworks } from './networks';
import * as Api from './api';
import * as Card from './card';
import * as Security from './security';
import { Protocols as Proto } from './protocols';
import { NetworkLabels } from './networks/common/labels';
import { NetworkIcons } from './networks/common/icons';
declare class Types {
    static AllNetworks: typeof AllNetworks;
    static AllNodeTypes: {
        xahau: typeof import("./networks/xahau").XahauNetwork.NetworkTypes;
        xrpl: typeof import("./networks/xrpl").XrplLedgerNetwork.NetworkTypes;
        xevm: typeof import("./networks/xevm").XevmNetwork.NetworkTypes;
    };
    static AllNodeExplorers: {
        xahauExpl: typeof import("./networks/xahau").XahauNetwork.Explorers;
        xrplExpl: typeof import("./networks/xrpl").XrplLedgerNetwork.Explorers;
        xevmExpl: typeof import("./networks/xevm").XevmNetwork.Explorers;
    };
    static AllProtocols: typeof Proto;
    static Api: typeof Api;
    static Card: typeof Card.Card;
    static Security: typeof Security.Security;
    static BasicNetwork: Types.BasicNetwork;
    static BasicUser: Types.BasicUser;
    static NodeTypes: AllNetworks.NodeTypes;
    static NodeExplorers: AllNetworks.NodeExplorers;
    static Protocols: Proto;
    static Networks: Types.Networks;
    static Icons: Types.Icons;
    static EncryptionTypes: Security.Security.EncryptionTypes;
    static EncryptTypes: Security.Security.EncryptTypes;
    static CardEncryptionTypes: Security.Security.CardEncryptionTypes;
    static PasscodeEncryptionTypes: Security.Security.PasscodeEncryptionTypes;
    static availableProtocols: readonly [Proto.xrpl, Proto.evm];
    static NetworkIdentifiers: {
        "xrp ledger": typeof import("./networks/xrpl").XrplLedgerNetwork;
        "xevm sidechain": typeof import("./networks/xevm").XevmNetwork;
        xahau: typeof import("./networks/xahau").XahauNetwork;
    };
}
declare namespace Types {
    type AllNetworks = typeof AllNetworks;
    type AllNodeTypes = typeof AllNetworks.AllNodeTypes;
    type AllNodeExplorers = typeof AllNetworks.AllNodeExplorers;
    type NodeTypes = AllNetworks.NodeTypes;
    type NodeExplorers = AllNetworks.NodeExplorers;
    type AllExplorers = AllNetworks.availableExplorers;
    type Networks = NetworkLabels;
    type Icons = NetworkIcons;
    type Protocols = Proto;
    type Access = 'full' | 'partial' | 'observe';
    type Security = 'passcode' | 'password' | 'fingerprint' | 'face';
    interface BasicNetwork {
        protocol: Types.Protocols;
        type: Types.NodeTypes;
        wss: string;
        rpc: string;
    }
    interface BasicUser {
        id: string;
        username: string;
        type: string;
        slug?: string;
        developer: boolean;
    }
}
export { Types };
