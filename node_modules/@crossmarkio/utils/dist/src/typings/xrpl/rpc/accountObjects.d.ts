import { LedgerIndex } from './common';
import { BaseParams, BaseRequest } from './baseMethod';
type AccountObjectType = 'bridge' | 'check' | 'deposit_preauth' | 'escrow' | 'nft_offer' | 'offer' | 'payment_channel' | 'signer_list' | 'state' | 'ticket' | 'xchain_owned_create_account_claim_id' | 'xchain_owned_claim_id';
export interface AccountObjectsParams extends BaseParams {
    /** A unique identifier for the account, most commonly the account's address. */
    account: string;
    /**
     * If included, filter results to include only this type of ledger object.
     * The valid types are: Check , DepositPreauth, Escrow, Offer, PayChannel,
     * SignerList, Ticket, and RippleState (trust line).
     */
    type?: AccountObjectType;
    /**
     * If true, the response only includes objects that would block this account
     * from being deleted. The default is false.
     */
    deletion_blockers_only?: boolean;
    /** A 20-byte hex string for the ledger version to use. */
    ledger_hash?: string;
    /**
     * The ledger index of the ledger to use, or a shortcut string to choose a
     * Ledger automatically.
     */
    ledger_index?: LedgerIndex;
    /**
     * The maximum number of objects to include in the results. Must be within
     * the inclusive range 10 to 400 on non-admin connections. The default is 200.
     */
    limit?: number;
    /**
     * Value from a previous paginated response. Resume retrieving data where
     * that response left off.
     */
    marker?: unknown;
}
/**
 * The account_objects command returns the raw ledger format for all objects
 * owned by an account. For a higher-level view of an account's trust lines and
 * balances, see the account_lines method instead. Expects a response in the
 * form of an {@link AccountObjectsResponse}.
 *
 * @category Requests
 */
export interface AccountObjectsRequest extends BaseRequest {
    method: 'account_objects';
    params: AccountObjectsParams[];
}
export {};
