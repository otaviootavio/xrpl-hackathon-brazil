import { BaseParams, BaseRequest } from './baseMethod';
export interface TxParams extends BaseParams {
    transaction: string;
    /**
     * If true, return transaction data and metadata as binary serialized to
     * hexadecimal strings. If false, return transaction data and metadata as.
     * JSON. The default is false.
     */
    binary?: boolean;
    /**
     * Use this with max_ledger to specify a range of up to 1000 ledger indexes,
     * starting with this ledger (inclusive). If the server cannot find the
     * transaction, it confirms whether it was able to search all the ledgers in
     * this range.
     */
    min_ledger?: number;
    /**
     * Use this with min_ledger to specify a range of up to 1000 ledger indexes,
     * ending with this ledger (inclusive). If the server cannot find the
     * transaction, it confirms whether it was able to search all the ledgers in
     * the requested range.
     */
    max_ledger?: number;
}
/**
 * The tx method retrieves information on a single transaction, by its
 * identifying hash. Expects a response in the form of a {@link TxResponse}.
 *
 * @category Requests
 */
export interface TxRequest extends BaseRequest {
    method: 'tx';
    params: TxParams[];
}
