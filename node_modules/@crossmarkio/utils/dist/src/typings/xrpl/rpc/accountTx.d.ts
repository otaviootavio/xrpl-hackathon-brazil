import { LedgerIndex } from './common';
import { BaseParams, BaseRequest } from './baseMethod';
export interface AccountTxParams extends BaseParams {
    /** A unique identifier for the account, most commonly the account's address. */
    account: string;
    /**
     * Use to specify the earliest ledger to include transactions from. A value
     * of -1 instructs the server to use the earliest validated ledger version
     * available.
     */
    ledger_index_min?: number;
    /**
     * Use to specify the most recent ledger to include transactions from. A
     * value of -1 instructs the server to use the most recent validated ledger
     * version available.
     */
    ledger_index_max?: number;
    /** Use to look for transactions from a single ledger only. */
    ledger_hash?: string;
    /** Use to look for transactions from a single ledger only. */
    ledger_index?: LedgerIndex;
    /**
     * If true, return transactions as hex strings instead of JSON. The default is
     * false.
     */
    binary?: boolean;
    /**
     * If true, returns values indexed with the oldest ledger first. Otherwise,
     * the results are indexed with the newest ledger first.
     */
    forward?: boolean;
    /**
     * Default varies. Limit the number of transactions to retrieve. The server
     * is not required to honor this value.
     */
    limit?: number;
    /**
     * Value from a previous paginated response. Resume retrieving data where
     * that response left off. This value is stable even if there is a change in
     * the server's range of available ledgers.
     */
    marker?: unknown;
}
/**
 * The account_tx method retrieves a list of transactions that involved the
 * specified account. Expects a response in the form of a {@link
 * AccountTxResponse}.
 *
 * @category Requests
 */
export interface AccountTxRequest extends BaseRequest {
    command: 'account_tx';
    params: AccountTxParams[];
}
