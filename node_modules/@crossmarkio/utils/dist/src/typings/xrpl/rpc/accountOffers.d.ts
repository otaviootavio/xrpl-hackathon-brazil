import { LedgerIndex } from './common';
import { BaseParams, BaseRequest } from './baseMethod';
export interface AccountOffersParams extends BaseParams {
    /** A unique identifier for the account, most commonly the account's Address. */
    account: string;
    /** A 20-byte hex string identifying the ledger version to use. */
    ledger_hash?: string;
    /**
     * The ledger index of the ledger to use, or "current", "closed", or
     * "validated" to select a ledger dynamically.
     */
    ledger_index?: LedgerIndex;
    /**
     * Limit the number of transactions to retrieve. The server is not required
     * to honor this value. Must be within the inclusive range 10 to 400.
     */
    limit?: number;
    /**
     * Value from a previous paginated response. Resume retrieving data where
     * that response left off.
     */
    marker?: unknown;
    /**
     * If true, then the account field only accepts a public key or XRP Ledger
     * address. Otherwise, account can be a secret or passphrase (not
     * recommended). The default is false.
     */
    strict?: boolean;
}
/**
 * The account_offers method retrieves a list of offers made by a given account
 * that are outstanding as of a particular ledger version. Expects a response in
 * the form of a {@link AccountOffersResponse}.
 *
 * @category Requests
 */
export interface AccountOffersRequest extends BaseRequest {
    method: 'account_offers';
    params: AccountOffersParams[];
}
