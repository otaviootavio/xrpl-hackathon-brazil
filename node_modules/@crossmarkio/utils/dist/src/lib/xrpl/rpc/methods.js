"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.tx = exports.account_nfts = exports.ledger_entry = exports.account_tx = exports.account_offers = exports.account_objects = exports.account_currencies = exports.server_info = exports.account_info = exports.account_lines = void 0;
const account_lines = (params) => {
    return {
        method: 'account_lines',
        params: [params],
    };
};
exports.account_lines = account_lines;
const account_info = (params) => {
    return {
        method: 'account_info',
        params: [params],
    };
};
exports.account_info = account_info;
const server_info = () => {
    return {
        method: 'server_info',
        params: [{}],
    };
};
exports.server_info = server_info;
const account_currencies = (params) => {
    return {
        method: 'account_currencies',
        params: [params],
    };
};
exports.account_currencies = account_currencies;
const account_objects = (params) => {
    return {
        method: 'account_objects',
        params: [params],
    };
};
exports.account_objects = account_objects;
const account_offers = (params) => {
    return {
        method: 'account_offers',
        params: [params],
    };
};
exports.account_offers = account_offers;
const account_tx = (params) => {
    return {
        method: 'account_tx',
        params: [params],
    };
};
exports.account_tx = account_tx;
/* export const ledger = (input: LedgerRequestInput) => {
  return {
    method: 'ledger',
    params: [
      {
        ...(input.ledger_hash && { ledger_hash: input.ledger_hash }),
        ...(input.ledger_index && { ledger_index: input.ledger_index }),
        ...(input.accounts && {
          accounts: input.accounts,
        }),
        ...(input.full && { full: input.full }),
        ...(input.transactions && { transactions: input.transactions }),
        ...(input.expand && { expand: input.expand }),
        ...(input.owner_funds && { owner_funds: input.owner_funds }),
        ...(input.binary && { binary: input.binary }),
        ...(input.queue && { queue: input.queue }),
      },
    ],
  } as LedgerRequest;
}; */
const ledger_entry = (params) => {
    return {
        method: 'ledger_entry',
        params: [params],
    };
};
exports.ledger_entry = ledger_entry;
const account_nfts = (params) => {
    return {
        method: 'account_nfts',
        params: [params],
    };
};
exports.account_nfts = account_nfts;
const tx = (params) => {
    return {
        method: 'tx',
        params: [params],
    };
};
exports.tx = tx;
// eslint-disable-next-line import/no-anonymous-default-export
exports.default = {
    account_lines: exports.account_lines,
    account_objects: exports.account_objects,
    ledger_entry: exports.ledger_entry,
    account_currencies: exports.account_currencies,
    account_info: exports.account_info,
    server_info: exports.server_info,
    account_tx: exports.account_tx,
    account_nfts: exports.account_nfts,
    account_offers: exports.account_offers,
    tx: exports.tx,
};
//# sourceMappingURL=methods.js.map